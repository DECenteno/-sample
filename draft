#include <iostream>
#include <thread>
#include <chrono> 
using namespace std;

void prepFood() {
    for (int i = 1; i <= 9; i += 2) {
        cout << "Preparing Food:  " << i << "\n";
        this_thread::sleep_for(chrono::milliseconds(200)); // Simulate work
    }
}

void decorateDecor() {
    for (int i = 2; i <= 10; i += 2) {
        cout << "Decorating decor: " << i << "\n";
        this_thread::sleep_for(chrono::milliseconds(200)); // Simulate work
    }
}

void checkProgress() {
    cout << "\n=== Checking Progress ===\n";
    for (int i = 1; i <= 10; ++i) {
        cout << "Count: " << i << "\n";
        this_thread::sleep_for(chrono::milliseconds(200)); // Simulate work
    }
    
    cout << "\n=== Preparing Food and Decorating ===\n";
    thread t1(prepFood);
    thread t2(decorateDecor);
    
}

int main() {
    thread t1(prepFood);
    thread t2(decorateDecor);
    checkProgress(); 
    t1.join(); 
    t2.join();
  
    return 0;
}
